function Prime(num) {
    // 예외적 숫자를 먼저 처리해 주자
    // 모든 짝수는 2의 배수이기 때문에 소수가 아니다 
    // 하지만 2는 1과 자기 자신인 2로 나누어 떨어지는 약수가 2개인 수이기 때문에 소수다
    if(num === 2){
      return true;
    }
    
    // 1은 1과 자기자신으로 나누어떨어지긴 하지만, (1 % 1 === 0)
    // 약수의 개수가 하나뿐이라서 소수가 아니다 (2개여야 한다)
    if(num === 1){
      return false;
    }
    // 2의  배수도  소수가 아니므로 false를 리턴해준다
    if (num % 2 === 0){
      return false;
    }
    // 1과 2는 이미 지정을 해줬으니 3부터 시작하면 된다
    // 2의 배수를 제외해서 홀수만 체크해도 되니 i에 2씩 더해준다
    for(let i = 3; i < num; i+=2){
          // 이제 i의 값은 1도 num 자기자신도 아닌 홀수들로 구성되어있다
      // num을 i로 나눴을 때 나머지가 0이면, 1과 자기자신 외에도 
          //i를 약수로 갖는 숫자가 되므로 false를 리턴해준다
      if(num % i === 0){
        return false;
      }
    }
    return true;
    // 반복문을 지나서 true인 수는 1과 자기자신으로만 나누어떨어지는 숫자이므로 소수다 
  }
 console.log(Prime(11587)) 